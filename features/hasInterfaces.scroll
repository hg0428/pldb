import header.scroll

title Interfaces

title Interfaces - language feature
 hidden

html
 <a class="trueBaseThemePreviousItem" href="hasIntegers.html">&lt;</a>
 <a class="trueBaseThemeNextItem" href="hasIterators.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/columns/.grammar

startColumns 4

codeWithHeader Example from <a href="../rows/java.html">Java</a>, <a href="../rows/pizza.html">Pizza</a>, <a href="../rows/oracle-java.html">Oracle Java</a>, <a href="../rows/deesel.html">Deesel</a>:
 interface MyInterface{  
    /* This is a default method so we need not
     * to implement this method in the implementation 
     * classes  
     */
    default void newMethod(){  
        System.out.println(&quot;Newly added default method&quot;);  
    }  
    /* Already existing public and abstract method
     * We must need to implement this method in 
     * implementation classes.
     */
    void existingMethod(String str);  
 }  
 public class Example implements MyInterface{ 
   // implementing abstract method
     public void existingMethod(String str){           
         System.out.println(&quot;String is: &quot;+str);  
     }  
     public static void main(String[] args) {  
       Example obj = new Example();
       
       //calling the default method of interface
         obj.newMethod();     
         //calling the abstract method of interface
         obj.existingMethod(&quot;Java 8 is easy to learn&quot;); 
   
     }  
 }

codeWithHeader Example from <a href="../rows/swift.html">Swift</a>:
 protocol MyProtocol {
 init(parameter: Int)
 var myVariable: Int { get set }
 var myReadOnlyProperty: Int { get }
 func myMethod()
 func myMethodWithBody()
 }
 extension MyProtocol {
 func myMethodWithBody() {
   // implementation goes here
   }
 }

codeWithHeader Example from <a href="../rows/kotlin.html">Kotlin</a>:
 interface Named {
    val name: String
 }
 interface Person : Named {
     val firstName: String
     val lastName: String
     
     override val name: String get() = &quot;$firstName $lastName&quot;
 }

codeWithHeader Example from <a href="../rows/typescript.html">TypeScript</a>, <a href="../rows/static-typescript.html">Static Typescript</a>:
 // https://www.typescriptlang.org/docs/handbook/interfaces.html
 interface SquareConfig {
    color?: string;
    width?: number;
 }

codeWithHeader Example from <a href="../rows/objective-c.html">Objective-C</a>, <a href="../rows/cooc.html">cooC</a>:
 @protocol Printing
    -(void) print;
 @end

codeWithHeader Example from <a href="../rows/graphql.html">GraphQL</a>:
 interface Character {
  id: ID!
  name: String!
  friends: [Character]
  appearsIn: [Episode]!
 }
 type Human implements Character {
   id: ID!
   name: String!
   friends: [Character]
   appearsIn: [Episode]!
   starships: [Starship]
   totalCredits: Int
 }
 type Droid implements Character {
   id: ID!
   name: String!
   friends: [Character]
   appearsIn: [Episode]!
   primaryFunction: String
 }

* Languages *with* Interfaces include <a href="../rows/java.html">Java</a>, <a href="../rows/swift.html">Swift</a>, <a href="../rows/kotlin.html">Kotlin</a>, <a href="../rows/typescript.html">TypeScript</a>, <a href="../rows/objective-c.html">Objective-C</a>, <a href="../rows/graphql.html">GraphQL</a>, <a href="../rows/pizza.html">Pizza</a>, <a href="../rows/oracle-java.html">Oracle Java</a>, <a href="../rows/deesel.html">Deesel</a>, <a href="../rows/cooc.html">cooC</a>, <a href="../rows/static-typescript.html">Static Typescript</a>

* Languages *without* Interfaces include <a href="../rows/progsbase.html">progsbase</a>

* This question asks: Does this language have a concept of interfaces?

* Read more about Interfaces on the web: 1.
 https://en.wikipedia.org/wiki/Protocol_(object-oriented_programming) 1.

HTML of this page generated by Features.ts
 https://github.com/breck7/pldb/blob/main/code/Features.ts Features.ts

endColumns

keyboardNav hasIntegers.html hasIterators.html

import ../footer.scroll
